PHTTP159.153.236.12"¿
<GET /v/GRzYfw/include/js/category/gamesearchJQ.js HTTP/1.1
Host: www.pogo.com
Connection: keep-alive
Accept: */*
vUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36
Referer: http://www.pogo.com/
$Accept-Encoding: gzip,deflate,sdch
!Accept-Language: en-US,en;q=0.8
ZCookie: prod.JID=49A7278FE4645146C5D180E013537465.000272; com.pogo.unid=6712084695971357

*ž*
HTTP/1.1 200 OK
Age: 277792    
%Date: Tue, 07 Jan 2014 04:50:05 GMT
(Expires: Sun, 06 Jan 2019 10:26:26 GMT
#Cache-Control: max-age=157680000 
Connection: Keep-Alive
Via: POGO-EDGE
ETag: W/"5011-1368049191000"
Server: Apache-Coyote/1.1
Accept-Ranges: bytes
.Last-Modified: Wed, 08 May 2013 21:39:51 GMT
Content-Type: text/javascript
Content-Length: 5011
•'
var GameSearch = {};

(function( $ ){
	GameSearch.wasCleared = false;
	
	GameSearch.adjust = function() {
		var filterHeight = $('#filters').height();
		var resultsHeight = $('#searchResults').height();
		var sumOfFilterChildrenHeights = 0;
		$("#filters").children().each(function(){
			sumOfFilterChildrenHeights += $(this).outerHeight(true);
		});
		if(filterHeight!=resultsHeight)
			{
			if(resultsHeight>sumOfFilterChildrenHeights)
				{
				$('#filters').height(resultsHeight);	
				}
			else
				{
				$('#filters').height(sumOfFilterChildrenHeights);
				$('#searchResults').height(sumOfFilterChildrenHeights);
				}
			}
	}

	GameSearch.clearInputText = function() {
		if(GameSearch.wasCleared){
			return
		}
		GameSearch.wasCleared = true;
		var el = $("#gameFinderInput");
		var altValue = el.attr("alt");
		var value = el.attr("value");
		if(altValue == value){
			$("#gameFinderInput").attr("value","");
		}
	}
	
	GameSearch.updateInputText = function() {
		var el = $("#gameFinderInput");
		if(!el.attr("value")){
			GameSearch.wasCleared = false;
			el.attr("value",el.attr("alt"));
		}
	}
	// highlight keyword typed in the search box
	monkeyPatchAutocomplete = function() {
      $.ui.autocomplete.prototype._renderItem = function (ul, item) {
            item.label = item.label.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)(" + 
            $.ui.autocomplete.escapeRegex(this.term) +")(?![^<>]*>)(?![^&;]+;)", "gi"), "<strong>$1</strong>");
            return $("<li></li>")
                    .data("item.autocomplete", item)
                    .append("<a>" + item.label + "</a>")
                    .appendTo(ul);
        };
   	}

	$(function() {
		$.get("/misc/gamesearch/autocomplete.do",function(data){
			var gameFinderTokens = $(data);
			var gameFinderInput = $("#gameFinderInput");
			if (gameFinderTokens.length && gameFinderInput.length) {
				var tokens = $(
						// Wrap the string array with a jQuery object
						gameFinderTokens.html().split(",")
					).map(function(index) {
						// Return the trimmed string
						return jQuery.trim(
								// Replace basic HTML entities from each string
								this.replace(/&amp;/gi,'&').replace(/&lt;/gi,'<').replace(/&quot;/gi,'"')
							);
					}).get(); // At last, get the final string array
				monkeyPatchAutocomplete(); // enables keyword highlighting
				gameFinderInput.autocomplete({
					source: function(req, responseFn) {
				        var re = $.ui.autocomplete.escapeRegex(req.term);
				        var matcher = new RegExp( "^" + re, "i" );
				        var a = $.grep( tokens, function(item,index){
							var flag = false;
							var counter = 0;
							var temp = "";
							var temp2 = false;
				            flag = matcher.test(item);
							for (;counter < item.length ;counter ++ )
							{
								if (item.charAt(counter)==" "||item.charAt(counter)=="-")
								{
									temp =(item.substring(counter+1));
									if (temp!="")
									{
										temp2 = matcher.test(temp);
										flag = (flag || temp2);
									}
								}
							}			
							return flag;
				        });
						//alphabetically arranging 
						var arr1=[];
						var arr2=[];
						for (i=0; i<a.length; i++)
							if(a[i].substring(0,req.term.length).toLowerCase()===req.term.toLowerCase())
								arr1.push(a[i]);
							else
								arr2.push(a[i]);
						a=arr1.concat(arr2);	
						
				        responseFn( a );
				    }, // 'source' expects an array of strings
					select: function(event, ui) {
						$('#gameFinderInput').val(ui.item.value);
						$('form[name="gameSearchForm"]').submit();
					},
					open: function (e, ui) {
						var gameFinderWidget;
						gameFinderWidget = $(this).autocomplete('widget'); // For header autocomplete
						/* Apply id attribute for game finder autocomplete and position dropdown with offsets */
						gameFinderWidget.attr('id', 'gameFinderAutocomplete').position({
							my: "left top",
							at: "left bottom",
							of: "div#game-finder-unauth",
							offset: "0 -4",
							collision: "none"
						});
					}

				});
			}			
		});
	});

	$.widget("ui.menu", $.extend({ }, $.ui.menu.prototype, {
		activate: function (event, item) {
		    this.deactivate();
		    if (this.hasScroll()) {
		        var offset = item.offset().top - this.element.offset().top,
		            scroll = this.element.scrollTop(),
		            elementHeight = this.element.height();
		        if (offset < 0) {
		            this.element.scrollTop(scroll + offset);
		        } else if (offset >= elementHeight) {
		            this.element.scrollTop(scroll + offset - elementHeight + item.height());
		        }
		    }
		    this.active = item.eq(0)
		        .children("a")
		            .addClass("ui-state-hover")
		            .attr("id", "ui-active-menuitem")
		        .end();
		    this._trigger("focus", event, { item: item });
		},

		hasScroll: function () {
		    return this.element.height() < this.element[$.fn.prop ? "prop" : "attr"]("scrollHeight");
		}
	}));
})( jQuery );

