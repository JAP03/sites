PHTTP159.153.236.12"Ñ
=GET /v/GIv2Qw/include/js/shared/ImpressionTrack.js HTTP/1.1
Host: www.pogo.com
Connection: keep-alive
Accept: */*
vUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36
Referer: http://www.pogo.com/
$Accept-Encoding: gzip,deflate,sdch
!Accept-Language: en-US,en;q=0.8
ùCookie: prod.JID=C816F2024A6FFAFE148716AABA2FA2A6.000163; com.pogo.unid=6711753983670030; __utma=103122817.1208275009.1389802737.1389802737.1389802737.1; __utmb=103122817.1.10.1389802737; __utmc=103122817; __utmz=103122817.1389802737.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)

*˘+
HTTP/1.1 200 OK
Age: 6285      
%Date: Wed, 15 Jan 2014 14:34:07 GMT
(Expires: Mon, 14 Jan 2019 14:34:08 GMT
#Cache-Control: max-age=157680000 
Connection: Keep-Alive
Via: POGO-EDGE
ETag: W/"5230-1358554091000"
Server: Apache-Coyote/1.1
Accept-Ranges: bytes
.Last-Modified: Sat, 19 Jan 2013 00:08:11 GMT
Content-Type: text/javascript
Content-Length: 5230
(
/////////////////////////////////////////////////////////////////////////////////
//
// File: ImpressionTrack.js
// Description: tracking special area on the page via Omniture
// Updated Date: 2012-04-24 
//
// Copyright (c) 2012 by Electronic Arts. All rights reserved. 
/////////////////////////////////////////////////////////////////////////////////

(function($)
{
    var $window = $(window);
    var $document = $(document);
    
    var eventClick = "click";
    var eventScroll = "scroll";
    var eventResize = "resize";
    var bothEvents = eventScroll + " " + eventResize;
    
    var baseline;
    var baselineHeight;
    var baselineScroll;
    
    var scrollQueue = [];
    var clickQueue = [];
    
    var heightInterval;
    var documentHeight;
    
    var defaults =
    {
      /*
      *{
      * eleSelector: "test",
      * eventType: "click",
      * omnitureTrackingParameter: "fp_RG"
      *}
      */
      trackingElements:[]
    };
    
    $.extend(
    {
        impressionTrack: function(options)
        {
           var settings = $.extend(true, {}, defaults, options);
           var trackingElementsArray =  settings.trackingElements;
           
           if (!baseline)
           {
              syncBaseline();
           }
           if (!documentHeight)
           {
              documentHeight = $document.height();
           }

           $(trackingElementsArray).each(function(index, item)
           {
              if(item.eventType == eventClick){clickQueue.push(item);}
              if(item.eventType == eventScroll)
              {
                var $currentEle = $(item.eleSelector);
                var top = $currentEle.offset().top;

                if (!top)
                {
                  top = $currentEle.closest(":visible").offset().top;
                }
                  
                item.top = top;
                (top <= baseline) ? sendOmnitureTracking(item) : addToScrollQueue(item);
              }
           });
           
           if(clickQueue.length > 0)
           {
             $(clickQueue).each(function(index, item)
              {
                $(item.eleSelector).one("click", function(){sendOmnitureTracking(item)});
              });
           }

           function addToScrollQueue(itemObject)
           {
              if (!scrollQueue.length)
              {
                attachScrollEvent();
              }

              scrollQueue.push(itemObject);
              scrollQueue.sort(function(a,b)
              {
                return b.top - a.top;
              });
           }

           function syncBaseline(event)
           {
              if (event)
              {
                  if (event.type == eventResize)
                  {
                      baselineHeight = $window.height();
                  }
                  else if (event.type == eventScroll)
                  {
                      baselineScroll = $window.scrollTop();
                  }
              }
              else
              {
                baselineHeight = $window.height();
                baselineScroll = $window.scrollTop();
              }
              baseline = baselineHeight + baselineScroll;
            }
           
           function attachScrollEvent()
           {
              $window.bind(bothEvents, scrollEventHandler);
              heightInterval = setInterval(checkDocumentHeight, 1000);
           }

           function scrollEventHandler(e)
           {
              syncBaseline(e);
              for (var i = scrollQueue.length - 1; i >= 0 && scrollQueue[i].top <= baseline; i--)
              {
                var item = scrollQueue[i];
                sendOmnitureTracking(item);
                scrollQueue.splice(i, 1);
              }
              if (!scrollQueue.length)
              {
                $window.unbind(bothEvents, scrollEventHandler);
                clearInterval(heightInterval);
              }
           }

           function sendOmnitureTracking(eleObject)
           {
                if(typeof OmnitureLightEvent=='function')
                {
                    OmnitureLightEvent(eleObject.omnitureTrackingParameter);
                }
           }

          function checkDocumentHeight()
          {
            var curDocumentHeight = $document.height();
            if (curDocumentHeight != documentHeight)
            {
              documentHeight = curDocumentHeight;
              var currentQueue = scrollQueue;
              var queueLength = currentQueue.length;
              var bindObject;
              scrollQueue = [];
              for (var ndx = 0; ndx < queueLength; ndx++)
              {
                bindObject = currentQueue[ndx];
                bindObject.top = $(bindObject.eleSelector).offset().top;
                if (!bindObject.top)
                {
                  bindObject.top = $(bindObject.eleSelector).closest(":visible").offset().top;
                }
                (bindObject.top <= baseline) ? sendOmnitureTracking(bindObject) : addToScrollQueue(bindObject);
              }
            }
          }
        }
    });

    $.extend($.impressionTrack, {defaults: defaults});
})(jQuery);

